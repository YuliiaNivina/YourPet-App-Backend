{
  "openapi": "3.0.1",
  "info": {
    "version": "1.11",
    "title": "Your Pet",
    "description": "",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Internal server for testing"
    },
    {
      "url": "https://yourpet-app-backend.onrender.com/api",
      "description": "Main (production) server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Notices",
      "description": "Notices endpoints"
    },
    {
      "name": "Pets",
      "description": "Pets endpoints"
    },
    {
      "name": "User",
      "description": "Users endpoints"
    }
  ],

  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",

        "parameters": [],

        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",

        "parameters": [],

        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },

    "/pets/users/addPet": {
      "post": {
        "tags": ["Pets"],
        "summary": "Add user`s pet",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Pet's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddPetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/AddPetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          }
        }
      }
    },
    "/pets/users/pets": {
      "get": {
        "tags": ["Pets"],
        "summary": "Get all user`s pets",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/UserPetsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Token not found",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/pets/users/{petId}": {
      "delete": {
        "tags": ["Pets"],
        "summary": "Delete user`s pet",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to use",
            "required": true
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Token not found",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },

    "/user/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Token not found",
            "content": {}
          }
        }
      }
    },
    "/user/update": {
      "patch": {
        "tags": ["User"],
        "summary": "User update",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "User's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Token not found",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/user/update/avatar": {
      "patch": {
        "tags": ["User"],
        "summary": "User avatar update",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "User's avatar",
          "required": true,
          "content": {
            "image/png, image/jpeg": {
              "schema": {
                "$ref": "#/components/schemas/AvatarUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "image/png, image/jpeg": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Token not found",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          }
        }
      }
    },

    "/notices": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get all notices",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Category of notices: sell, lost/found, in good hands",
            "required": true,
            "style": "form",
            "example": "sell"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of notices",
            "style": "form",
            "example": "1"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Notices page limit",
            "style": "form",
            "example": "10"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Notices"],
        "summary": "Add notice",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddNoticeRequest"
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/AddNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/notices/{noticeId}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get one notice by id",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "description": "ID of notice to use",
            "required": true
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeByIdResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Notices"],
        "summary": "Delete notice by ID",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "description": "ID of notice to use",
            "required": true
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Notice deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/notices/favorites": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get favorites notices",
        "parameters": [
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteNoticesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/notices/self": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get user`s notices",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/UsersNoticesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/notices/{noticeId}/favorite": {
      "patch": {
        "tags": ["Notices"],
        "summary": "Add notice to favorite",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "description": "ID of notice to use",
            "required": true
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFavoriteIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Notice not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Notices"],
        "summary": "Delete notice from favorite",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "description": "ID of notice to use",
            "required": true
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Notice deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "John"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "John"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        }
      },

      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "John"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        }
      },

      "AddPetRequest": {
        "type": "object",
        "required": ["name", "birthday", "type", "photoURL"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Bruno"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "2023-08-28"
          },
          "type": {
            "type": "string",
            "description": "Pet's type",
            "example": "Spitz"
          },
          "comments": {
            "type": "string",
            "description": "About pet",
            "example": "Something about pet"
          },
          "photoURL": {
            "type": "string",
            "description": "Pet's photo",
            "format": "binary"
          }
        }
      },
      "AddPetResponse": {
        "type": "object",
        "properties": {
          "petId": {
            "type": "string",
            "description": "Pet's id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Bruno"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "2023-08-28"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "Spitz"
          },
          "comments": {
            "type": "string",
            "description": "About pet",
            "example": "Something about pet"
          },
          "photoURL": {
            "type": "string",
            "description": "Pet's photo",
            "format": "binary"
          },
          "public_id": {
            "type": "string",
            "description": "Pet's id",
            "format": "uuid"
          }
        }
      },
      "UserPetsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "petId": {
              "type": "string",
              "description": "Pet's id",
              "format": "uuid"
            },
            "name": {
              "type": "string",
              "description": "Pet's name",
              "example": "Bruno"
            },
            "birthday": {
              "type": "string",
              "description": "Pet's birthday",
              "example": "2023-08-28"
            },
            "breed": {
              "type": "string",
              "description": "Pet's breed",
              "example": "Spitz"
            },
            "comments": {
              "type": "string",
              "description": "About pet",
              "example": "Something about pet"
            },
            "photoURL": {
              "type": "string",
              "description": "Pet's photo",
              "format": "binary"
            },
            "public_id": {
              "type": "string",
              "description": "Pet's id",
              "format": "uuid"
            }
          }
        },
        "example": [
          {
            "petId": "497349tyh",
            "name": "Bruno",
            "birthday": "2023-08-28",
            "breed": "Spitz",
            "comments": "Something about pet",
            "image": "",
            "public_id": "47gh49tyh"
          },
          {
            "petId": "485nhfvi9t",
            "name": "Bruno",
            "birthday": "2023-08-28",
            "breed": "Spitz",
            "comments": "Something about pet",
            "image": "",
            "public_id": "47g129tyh"
          }
        ]
      },

      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "John"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "2023-08-28"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "description": "User's birthday",
            "example": "+380000000000"
          },
          "city": {
            "type": "string",
            "description": "User's city of residence",
            "example": "Kiev"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's photo",
            "format": "binary"
          }
        }
      },

      "UserUpdateRequest": {
        "type": "object",
        "required": ["email", "birthday"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "John"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "2023-08-28"
          },
          "city": {
            "type": "string",
            "description": "User's city of residence",
            "example": "Kiev"
          },
          "phone": {
            "type": "string",
            "description": "User's birthday",
            "example": "+380000000000"
          }
        }
      },
      "UserUpdateResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "John"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "2023-08-28"
          },
          "city": {
            "type": "string",
            "description": "User's city of residence",
            "example": "Kiev"
          },
          "phone": {
            "type": "string",
            "description": "User's birthday",
            "example": "+380000000000"
          }
        }
      },
      "AvatarUpdateRequest": {
        "type": "object",
        "required": ["avatarURL"],
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User's avatar",
            "format": "binary"
          }
        }
      },
      "AvatarUpdateResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User's avatar",
            "format": "binary"
          }
        }
      },

      "NoticesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "notice's id",
              "format": "uuid"
            },
            "name": {
              "type": "string",
              "description": "Pet's name",
              "example": "Bruno"
            },
            "title": {
              "type": "string",
              "description": "Title of notice",
              "example": "Сute dog looking for a home"
            },
            "sex": {
              "type": "string",
              "description": "Sex of pet",
              "example": "female"
            },
            "birthday": {
              "type": "string",
              "description": "Pet's birthday",
              "example": "2023-08-28"
            },
            "type": {
              "type": "string",
              "description": "Pet's type",
              "example": "Spitz"
            },
            "imgUrl": {
              "type": "string",
              "description": "Pet's photo",
              "format": "binary"
            },
            "location": {
              "type": "string",
              "description": "Pet's location",
              "example": "Lviv"
            },
            "price": {
              "type": "string",
              "description": "Pet price",
              "example": "100$"
            },
            "comments": {
              "type": "string",
              "description": "About pet",
              "example": "Something about pet"
            },
            "category": {
              "type": "string",
              "description": "Notice category",
              "example": "sell"
            }
          }
        },
        "example": [
          {
            "_Id": "497349tyh",
            "name": "Bruno",
            "title": "Сute dog looking for a home 1",
            "sex": "female",
            "birthday": "2023-08-28",
            "type": "Spitz",
            "imgUrl": "https://cdn.pixabay.com/photo/2016/03/28/10/05/dog-1285341_1280.jpg",
            "location": "Lviv",
            "price": "100$",
            "comments": "Something about pet",
            "category": "sell"
          },
          {
            "_Id": "485nhfvi9t",
            "name": "Puppy",
            "title": "Сute cat looking for a home 2",
            "sex": "male",
            "birthday": "2023-08-28",
            "type": "Persian",
            "imgUrl": "https://cdn.pixabay.com/photo/2016/03/28/10/05/kitten-1285341_1281.jpg",
            "location": "Kyiv",
            "price": "10$",
            "comments": "Something about pet",
            "category": "sell"
          }
        ]
      },
      "NoticeByIdResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "notice's id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Bruno"
          },
          "title": {
            "type": "string",
            "description": "Title of notice",
            "example": "Сute dog looking for a home"
          },
          "sex": {
            "type": "string",
            "description": "Sex of pet",
            "example": "female"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "2023-08-28"
          },
          "type": {
            "type": "string",
            "description": "Pet's type",
            "example": "Spitz"
          },
          "imgUrl": {
            "type": "string",
            "description": "Pet's photo",
            "format": "binary",
            "example": "https://cdn.pixabay.com/photo/2016/03/28/10/05/dog-1285341_1280.jpg"
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "example": "Lviv"
          },
          "price": {
            "type": "string",
            "description": "Pet price",
            "example": "100$"
          },
          "comments": {
            "type": "string",
            "description": "About pet",
            "example": "Something about pet"
          },
          "category": {
            "type": "string",
            "description": "Notice category",
            "example": "sell"
          }
        }
      },
      "FavoriteNoticesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "notice's id",
              "format": "uuid"
            },
            "name": {
              "type": "string",
              "description": "Pet's name",
              "example": "Bruno"
            },
            "title": {
              "type": "string",
              "description": "Title of notice",
              "example": "Сute dog looking for a home"
            },
            "sex": {
              "type": "string",
              "description": "Sex of pet",
              "example": "female"
            },
            "birthday": {
              "type": "string",
              "description": "Pet's birthday",
              "example": "2023-08-28"
            },
            "type": {
              "type": "string",
              "description": "Pet's type",
              "example": "Spitz"
            },
            "imgUrl": {
              "type": "string",
              "description": "Pet's photo",
              "format": "binary"
            },
            "location": {
              "type": "string",
              "description": "Pet's location",
              "example": "Lviv"
            },
            "price": {
              "type": "string",
              "description": "Pet price",
              "example": "100$"
            },
            "comments": {
              "type": "string",
              "description": "About pet",
              "example": "Something about pet"
            },
            "category": {
              "type": "string",
              "description": "Notice category",
              "example": "sell"
            }
          }
        },
        "example": [
          {
            "_Id": "497349tyh",
            "name": "Bruno",
            "title": "Сute dog looking for a home 1",
            "sex": "female",
            "birthday": "2023-08-28",
            "type": "Spitz",
            "imgUrl": "https://cdn.pixabay.com/photo/2016/03/28/10/05/dog-1285341_1280.jpg",
            "location": "Lviv",
            "price": "100$",
            "comments": "Something about pet",
            "category": "sell"
          },
          {
            "_Id": "485nhfvi9t",
            "name": "Puppy",
            "title": "Сute cat looking for a home 2",
            "sex": "male",
            "birthday": "2023-08-28",
            "type": "Persian",
            "imgUrl": "https://cdn.pixabay.com/photo/2016/03/28/10/05/kitten-1285341_1281.jpg",
            "location": "Kyiv",
            "price": "10$",
            "comments": "Something about pet",
            "category": "sell"
          }
        ]
      },
      "UpdateFavoriteIdResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "notice's id",
              "format": "uuid"
            },
            "name": {
              "type": "string",
              "description": "Pet's name",
              "example": "Bruno"
            },
            "title": {
              "type": "string",
              "description": "Title of notice",
              "example": "Сute dog looking for a home"
            },
            "sex": {
              "type": "string",
              "description": "Sex of pet",
              "example": "female"
            },
            "birthday": {
              "type": "string",
              "description": "Pet's birthday",
              "example": "2023-08-28"
            },
            "type": {
              "type": "string",
              "description": "Pet's type",
              "example": "Spitz"
            },
            "imgUrl": {
              "type": "string",
              "description": "Pet's photo",
              "format": "binary"
            },
            "location": {
              "type": "string",
              "description": "Pet's location",
              "example": "Lviv"
            },
            "price": {
              "type": "string",
              "description": "Pet price",
              "example": "100$"
            },
            "comments": {
              "type": "string",
              "description": "About pet",
              "example": "Something about pet"
            },
            "category": {
              "type": "string",
              "description": "Notice category",
              "example": "sell"
            }
          }
        },
        "example": [
          {
            "_Id": "497349tyh",
            "name": "Bruno",
            "title": "Сute dog looking for a home 1",
            "sex": "female",
            "birthday": "2023-08-28",
            "type": "Spitz",
            "imgUrl": "https://cdn.pixabay.com/photo/2016/03/28/10/05/dog-1285341_1280.jpg",
            "location": "Lviv",
            "price": "100$",
            "comments": "Something about pet",
            "category": "sell"
          },
          {
            "_Id": "485nhfvi9t",
            "name": "Puppy",
            "title": "Сute cat looking for a home 2",
            "sex": "male",
            "birthday": "2023-08-28",
            "type": "Persian",
            "imgUrl": "https://cdn.pixabay.com/photo/2016/03/28/10/05/kitten-1285341_1281.jpg",
            "location": "Kyiv",
            "price": "10$",
            "comments": "Something about pet",
            "category": "sell"
          }
        ]
      },
      "UsersNoticesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "notice's id",
              "format": "uuid"
            },
            "name": {
              "type": "string",
              "description": "Pet's name",
              "example": "Bruno"
            },
            "title": {
              "type": "string",
              "description": "Title of notice",
              "example": "Сute dog looking for a home"
            },
            "sex": {
              "type": "string",
              "description": "Sex of pet",
              "example": "female"
            },
            "birthday": {
              "type": "string",
              "description": "Pet's birthday",
              "example": "2023-08-28"
            },
            "type": {
              "type": "string",
              "description": "Pet's type",
              "example": "Spitz"
            },
            "imgUrl": {
              "type": "string",
              "description": "Pet's photo",
              "format": "binary"
            },
            "location": {
              "type": "string",
              "description": "Pet's location",
              "example": "Lviv"
            },
            "price": {
              "type": "string",
              "description": "Pet price",
              "example": "100$"
            },
            "comments": {
              "type": "string",
              "description": "About pet",
              "example": "Something about pet"
            },
            "category": {
              "type": "string",
              "description": "Notice category",
              "example": "sell"
            }
          }
        },
        "example": [
          {
            "_Id": "497349tyh",
            "name": "Bruno",
            "title": "Сute dog looking for a home 1",
            "sex": "female",
            "birthday": "2023-08-28",
            "type": "Spitz",
            "imgUrl": "https://cdn.pixabay.com/photo/2016/03/28/10/05/dog-1285341_1280.jpg",
            "location": "Lviv",
            "price": "100$",
            "comments": "Something about pet",
            "category": "sell"
          },
          {
            "_Id": "485nhfvi9t",
            "name": "Puppy",
            "title": "Сute cat looking for a home 2",
            "sex": "male",
            "birthday": "2023-08-28",
            "type": "Persian",
            "imgUrl": "https://cdn.pixabay.com/photo/2016/03/28/10/05/kitten-1285341_1281.jpg",
            "location": "Kyiv",
            "price": "10$",
            "comments": "Something about pet",
            "category": "sell"
          }
        ]
      },
      "AddNoticeRequest": {
        "type": "object",
        "required": [
          "title",
          "name",
          "sex",
          "birthday",
          "type",
          "imgUrl",
          "location",
          "category"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of notice",
            "example": "Cute dog looking for a home"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Bruno"
          },
          "sex": {
            "type": "string",
            "description": "Sex of pet",
            "example": "female"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "2023-08-28"
          },
          "type": {
            "type": "string",
            "description": "Pet's type",
            "example": "Spitz"
          },
          "imgUrl": {
            "type": "string",
            "description": "Pet's photo",
            "format": "binary"
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "example": "Lviv"
          },
          "price": {
            "type": "string",
            "description": "Pet price is required for the 'sell' category",
            "example": "100$"
          },
          "comments": {
            "type": "string",
            "description": "About pet",
            "example": "Something about pet"
          },
          "category": {
            "type": "string",
            "description": "Category of notices: sell, lost/found, in good hands",
            "example": "sell"
          }
        }
      },
      "AddNoticeResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "notice's id",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "description": "Title of notice",
            "example": "Сute dog looking for a home"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Bruno"
          },
          "sex": {
            "type": "string",
            "description": "Sex of pet",
            "example": "female"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "2023-08-28"
          },
          "type": {
            "type": "string",
            "description": "Pet's type",
            "example": "Spitz"
          },
          "imgUrl": {
            "type": "string",
            "description": "Pet's photo",
            "format": "binary",
            "example": "https://cdn.pixabay.com/photo/2016/03/28/10/05/dog-1285341_1280.jpg"
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "example": "Lviv"
          },
          "price": {
            "type": "string",
            "description": "Pet price",
            "example": "100$"
          },
          "comments": {
            "type": "string",
            "description": "About pet",
            "example": "Something about pet"
          },
          "category": {
            "type": "string",
            "description": "Notice category",
            "example": "sell"
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
